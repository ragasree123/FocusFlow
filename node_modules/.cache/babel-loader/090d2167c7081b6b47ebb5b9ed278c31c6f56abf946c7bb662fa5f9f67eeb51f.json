{"ast":null,"code":"import{useState,useEffect}from\"react\";import TaskItem from\"./TaskItem\";import Stats from\"./Stats\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TaskList(){const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState(\"\");// ⬇ Load tasks from LocalStorage on first load\nuseEffect(()=>{const stored=localStorage.getItem(\"focusflow-tasks\");if(stored){setTasks(JSON.parse(stored));}},[]);// ⬆ Save tasks to LocalStorage whenever they change\nuseEffect(()=>{localStorage.setItem(\"focusflow-tasks\",JSON.stringify(tasks));},[tasks]);const addTask=()=>{if(newTask.trim()){setTasks([...tasks,{text:newTask,done:false}]);setNewTask(\"\");}};const toggleTask=index=>{const updated=[...tasks];updated[index].done=!updated[index].done;setTasks(updated);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-2 bg-gradient-to-r from-green-400 to-lime-500 text-white rounded shadow hover:from-green-500 hover:to-lime-600 transition-all\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a task...\",className:\"flex-1 px-3 py-2 text-black rounded\",value:newTask,onChange:e=>setNewTask(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,className:\"px-4 bg-green-600 rounded hover:bg-green-700\",children:\"Add\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:tasks.map((task,index)=>/*#__PURE__*/_jsx(TaskItem,{task:task,onToggle:()=>toggleTask(index)},index))}),/*#__PURE__*/_jsx(Stats,{tasks:tasks})]});}","map":{"version":3,"names":["useState","useEffect","TaskItem","Stats","jsx","_jsx","jsxs","_jsxs","TaskList","tasks","setTasks","newTask","setNewTask","stored","localStorage","getItem","JSON","parse","setItem","stringify","addTask","trim","text","done","toggleTask","index","updated","children","className","type","placeholder","value","onChange","e","target","onClick","map","task","onToggle"],"sources":["D:/Ragasree/focusflow-tailwind-react-starter/src/components/TaskList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport Stats from \"./Stats\";\r\n\r\n\r\nexport default function TaskList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  // ⬇ Load tasks from LocalStorage on first load\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"focusflow-tasks\");\r\n    if (stored) {\r\n      setTasks(JSON.parse(stored));\r\n    }\r\n  }, []);\r\n\r\n  // ⬆ Save tasks to LocalStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"focusflow-tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([...tasks, { text: newTask, done: false }]);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  const toggleTask = (index) => {\r\n    const updated = [...tasks];\r\n    updated[index].done = !updated[index].done;\r\n    setTasks(updated);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"px-4 py-2 bg-gradient-to-r from-green-400 to-lime-500 text-white rounded shadow hover:from-green-500 hover:to-lime-600 transition-all\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a task...\"\r\n          className=\"flex-1 px-3 py-2 text-black rounded\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={addTask}\r\n          className=\"px-4 bg-green-600 rounded hover:bg-green-700\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"space-y-2\">\r\n        {tasks.map((task, index) => (\r\n          <TaskItem key={index} task={task} onToggle={() => toggleTask(index)} />\r\n        ))}\r\n      </ul>\r\n\t\t<Stats tasks={tasks} />\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG5B,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACjC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE1C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CACtD,GAAIF,MAAM,CAAE,CACVH,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAC,CAC9B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAZ,SAAS,CAAC,IAAM,CACda,YAAY,CAACI,OAAO,CAAC,iBAAiB,CAAEF,IAAI,CAACG,SAAS,CAACV,KAAK,CAAC,CAAC,CAChE,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAW,OAAO,CAAGA,CAAA,GAAM,CACpB,GAAIT,OAAO,CAACU,IAAI,CAAC,CAAC,CAAE,CAClBX,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAE,CAAEa,IAAI,CAAEX,OAAO,CAAEY,IAAI,CAAE,KAAM,CAAC,CAAC,CAAC,CACpDX,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CAAC,CAED,KAAM,CAAAY,UAAU,CAAIC,KAAK,EAAK,CAC5B,KAAM,CAAAC,OAAO,CAAG,CAAC,GAAGjB,KAAK,CAAC,CAC1BiB,OAAO,CAACD,KAAK,CAAC,CAACF,IAAI,CAAG,CAACG,OAAO,CAACD,KAAK,CAAC,CAACF,IAAI,CAC1Cb,QAAQ,CAACgB,OAAO,CAAC,CACnB,CAAC,CAED,mBACEnB,KAAA,QAAAoB,QAAA,eACEpB,KAAA,QAAKqB,SAAS,CAAC,uIAAuI,CAAAD,QAAA,eACpJtB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,eAAe,CAC3BF,SAAS,CAAC,qCAAqC,CAC/CG,KAAK,CAAEpB,OAAQ,CACfqB,QAAQ,CAAGC,CAAC,EAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7C,CAAC,cACF1B,IAAA,WACE8B,OAAO,CAAEf,OAAQ,CACjBQ,SAAS,CAAC,8CAA8C,CAAAD,QAAA,CACzD,KAED,CAAQ,CAAC,EACN,CAAC,cAENtB,IAAA,OAAIuB,SAAS,CAAC,WAAW,CAAAD,QAAA,CACtBlB,KAAK,CAAC2B,GAAG,CAAC,CAACC,IAAI,CAAEZ,KAAK,gBACrBpB,IAAA,CAACH,QAAQ,EAAamC,IAAI,CAAEA,IAAK,CAACC,QAAQ,CAAEA,CAAA,GAAMd,UAAU,CAACC,KAAK,CAAE,EAArDA,KAAuD,CACvE,CAAC,CACA,CAAC,cACTpB,IAAA,CAACF,KAAK,EAACM,KAAK,CAAEA,KAAM,CAAE,CAAC,EAEhB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}